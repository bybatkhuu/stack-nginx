include /etc/nginx/conf.d/grpc/log-format.conf;

## Upstream for grpc proxy_pass:
upstream grpc-server {
	server 127.0.0.1:8000;

	# least_conn;
	# hash $binary_remote_addr consistent;
	# server 127.0.0.1:8000;
	# server 127.0.0.1:8081;
	# server 127.0.0.1:8082;
}

## Subdomain as reverse proxy:
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	http2 on;
	server_name grpc.example.com;

	## Logging:
	access_log /dev/stdout grpc_log;
	access_log /var/log/nginx/grpc.example.com.grpc_access.log grpc_log;
	access_log /var/log/nginx/grpc.example.com.grpc_access.json.log grpc_json;

	## SSL:
	include /etc/nginx/conf.d/ssl.conf;
	# ssl_stapling off;
	ssl_certificate /etc/nginx/ssl/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/nginx/ssl/live/example.com/privkey.pem;
	ssl_trusted_certificate /etc/nginx/ssl/live/example.com/chain.pem;

	## Cloudflare headers:
	# include /etc/nginx/conf.d/cloudflare/proxy.conf;

	## Proxy headers:
	# include /etc/nginx/conf.d/proxy.conf;
	# include /etc/nginx/conf.d/proxy-timeout.conf;

	## Reverse proxy:
	location / {
		# rewrite ^/api/(.*)$ /$1?$args break;
		grpc_pass grpc://grpc-server;

		grpc_set_header Host $host;
		grpc_set_header X-Real-IP $remote_addr;
		grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		grpc_set_header X-Forwarded-Proto $scheme;
		error_page 502 = /error502grpc;
	}

	location = /error502grpc {
		internal;
		default_type application/grpc;
		add_header grpc-status 14;
		add_header grpc-message "unavailable";
		return 204;
	}
}
