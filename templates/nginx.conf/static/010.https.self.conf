## HTTP redirect:
server {
	listen 80;
	listen [::]:80;

	location / {
		return 301 https://$host$request_uri;
	}
}

## Upstream for proxy_pass:
upstream api-server {
	server 127.0.0.1:8000;

	## Or Load Balancing:
	# least_conn;
	# hash $binary_remote_addr consistent;
	# server 127.0.0.1:8000;
	# server 127.0.0.1:8001;
	# server 127.0.0.1:8002;
}

## HTTPS:
server {
	listen 443 ssl;
	listen [::]:443 ssl;
	http2 on;

	## Logging:
	access_log /dev/stdout realip_combined if=$loggable;
	access_log /var/log/nginx/access.$map_date_now.log realip_combined if=$loggable;
	access_log /var/log/nginx/access.json.$map_date_now.log json_combined if=$loggable;
	# access_log /var/log/nginx/access.json.$map_date_now.log cf_json_combined if=$loggable;

	## Restrict methods:
	if ($request_method ~ ^(TRACE)$) {
		return 405;
	}

	## SSL:
	include /etc/nginx/conf.d/ssl.conf;
	ssl_certificate /etc/nginx/ssl/self.crt;
	ssl_certificate_key /etc/nginx/ssl/self.key;

	## Security headers:
	include /etc/nginx/conf.d/security-headers.conf;

	## Additional configs:
	include /etc/nginx/conf.d/general.conf;
	include /etc/nginx/conf.d/well-known.conf;

	## Static files:
	root /var/www/web/public;

	location / {
		try_files $uri $uri.html $uri/ =404;
	}

	# error_page 404 /404.html;
	# location = /404.html {
	# 	internal;
	# }

	# include /etc/nginx/conf.d/error-pages.conf;

	## Sub-path as static files:
	# location ^~ /demo {
	# 	alias /var/www/demo/public;
	# 	try_files ${_DOLLAR}uri ${_DOLLAR}uri/ =404;
	# }

	location ^~ /api {
		rewrite ^/api/(.*)$ /$1?$args break;

		## Cloudflare headers:
		# include /etc/nginx/conf.d/cloudflare/proxy.conf;

		## Proxy headers:
		include /etc/nginx/conf.d/proxy.conf;
		# include /etc/nginx/conf.d/proxy-timeout.conf;
		include /etc/nginx/conf.d/api-headers.conf;

		proxy_pass http://api-server;
	}

	# include /etc/nginx/conf.d/status.conf;
}
